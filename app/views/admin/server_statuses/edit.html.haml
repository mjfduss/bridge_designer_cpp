%h1 Server status at #{Time.now.to_s(:nice)} from client #{@ip}
- a_day_ago = 24.hours.ago
%table
  %tr
    %td Reminder requests:
    %td= ReminderRequest.count
  %tr
    %td Teams:
    %td
      - n_teams = Team.count
      - n_teams_with_designs = Team.joins(:designs).count(:id, :distinct => true)
      - n_teams_rejected = Team.joins(:designs).where("status = 'r'").count(:id, :distinct => true)
      #{n_teams} (#{n_teams_with_designs} with designs, #{n_teams_rejected} rejected)
  %tr
    %td ...last 24 hours:
    %td
      #{Team.where(['reg_completed >= ?', a_day_ago]).count}
      (#{Team.joins(:designs).where(['reg_completed >= ?', a_day_ago]).count(:id, :distinct => true)} with designs)
  %tr
    %td Designs:
    %td= Design.count
  %tr
    %td ...last 24 hours:
    %td= Design.where(['created_at >= ?', a_day_ago]).count
  %tr
    %td Standings:
    %td
      - s = %w{h m i}.map { |c| Standing.score_count(c) }
      - total_standings = s.inject(0, :+)
      High school: #{s[0]}
      |
      Middle school: #{s[1]}
      |
      Open: #{s[2]}
      |
      Total: #{total_standings}
      - if n_teams_with_designs - n_teams_rejected == total_standings
        %span.okay OK
      - else
        %span.questionable Not OK
  %tr
    %td Local Contests:
    %td= LocalContest.count
  - if LocalScoreboard.first
    %tr
      %td Local scoreboard update:
      %td= Time.zone.at(LocalScoreboard.maximum(:updated_at)).to_s(:nice)
  %tr
    - n_qualifiers_certificates = Certificate.where(:local_contest_id => nil).count
    - n_local_contest_certificates = Certificate.where('local_contest_id IS NOT NULL').count
    %td Certificates:
    %td
      Qualifiers: #{n_qualifiers_certificates}
      |
      Local contests: #{n_local_contest_certificates}
  %tr
    %td Semi-final scenario:
    %td= WPBDC::SEMIFINAL_SCENARIO_ID
  %tr
    %td Current scenario histogram:
    %td= link_to 'Download', admin_cost_histogram_path(:format => 'csv')
%hr
%h1 Clear contest database
= render :partial => 'shared/flash', :locals => { :flash => flash, :errors => [] }
.para
  Use the button below with extreme care.  Once cleared,
  the database can be restored only from backups.  This
  may lose several hours of contest submissions.

= form_tag({:controller => :server_statuses, :action => :update }, :method => :put) do
  .para
    Type the word
    %span.bold #{Admin::ServerStatusesController::VERIFICATION}
    in the box below.
  = text_field_tag('verification')
  .para Type your password in the box below.
  = password_field_tag('password')
  .para
  = submit_tag('Clear database now',
    :confirm => 'I am ABSOLUTELY SURE that I want to clear the entire database!')


